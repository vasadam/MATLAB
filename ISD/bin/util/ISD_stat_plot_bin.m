colNames = {'datetime',...
            'elevation',...
            'P',...
            'Te',...
            'E',...
            'd1P1h',...
            'd1P3h',...
            'd1P6h',...
            'd1P9h',...
            'd1P12h',...
            'd1P24h',...
            'd1Te1h',...
            'd1Te3h',...
            'd1Te6h',...
            'd1Te9h',...
            'd1Te12h',...
            'd1Te24h',...
            'd2P1h',...
            'd2P3h',...
            'd2P6h',...
            'd2P9h',...
            'd2P12h',...
            'd2P24h',...
            'd2Te1h',...
            'd2Te3h',...
            'd2Te6h',...
            'd2Te9h',...
            'd2Te12h',...
            'd2Te24h',...
            'd3P1h',...
            'd3P3h',...
            'd3P6h',...
            'd3P9h',...
            'd3P12h',...
            'd3P24h',...
            'd3Te1h',...
            'd3Te3h',...
            'd3Te6h',...
            'd3Te9h',...
            'd3Te12h',...
            'd3Te24h',...
            'd4P1h',...
            'd4P3h',...
            'd4P6h',...
            'd4P9h',...
            'd4P12h',...
            'd4P24h',...
            'd4Te1h',...
            'd4Te3h',...
            'd4Te6h',...
            'd4Te9h',...
            'd4Te12h',...
            'd4Te24h'};

rootDir = 'D:\NOAA\ISD_stat_tend_bin';
destDir = 'D:\NOAA\ISD_stat_regr_tend';
stationDirs = dir(rootDir);
parfor i=1:size(stationDirs,1)
    if (strcmp(stationDirs(i).name,'.') || strcmp(stationDirs(i).name,'..'))  % Skip '.' and '..'
        continue;
    end         
    
    hourFiles = dir(fullfile(rootDir,stationDirs(i).name));
    for j=1:size(hourFiles,1)
        if (strcmp(hourFiles(j).name,'.')...
            || strcmp(hourFiles(j).name,'..')...
            || isdir(hourFiles(j).name))  % Skip '.', '..' and folders
            continue;
        end      
        
        %% Load .mat file containing dataArray
        dataArray = load(fullfile(rootDir,stationDirs(i).name,hourFiles(j).name),'-mat');
        dataArray = dataArray.var;

        %% Allocate imported array to column variable names
        dt = dataArray{:, 1};
        E = dataArray{:, 5};             
        fileNameParts = strsplit(hourFiles(j).name,'.');
        hour = fileNameParts{1};            
        
        %% Create output directory
        mkdir(fullfile(destDir,stationDirs(i).name,hour));
        %% Calculate correlation coefficients    
        for k=1:size(dataArray,2)            
            % Skip datetime, elevation and E
            if (k==1 || k==2 || k==5)
                continue;
            end
            [stationDirs(i).name ' ' hourFiles(j).name ' ' num2str(k)]
            
            values = dataArray{:,k};
            if (~isempty(values(~isnan(values))))
                % same-day correlation coefficient
                plotFileName = fullfile(destDir,stationDirs(i).name,hour,[char(colNames{:, k}),'_0.png']);
                if (~exist(plotFileName,'file'))
                    fig = figure('Visible','off');
                    plot(dataArray{:, k},E,'.');
                    title([char(colNames{k}),' 0']);
                    print(fig,'-dpng',plotFileName);            
                    close(fig);
                end
                % previous-days correlation coefficients
                for d=-1:-1:-5        
                    plotFileName = fullfile(destDir,stationDirs(i).name,hour,[char(colNames{:, k}),'_',num2str(d),'.png']);
                    if (exist(plotFileName,'file'))
                        continue;
                    end
                    prev_values_tmp = [];
                    E_tmp = [];                    
                    n=0;
                    for q=(1-d):size(E)
                        % check if previous day measurement is available
                        for r=q-1:-1:1                                      
                            hourDiff = hours(dt(r) - dt(q));                  
                            if (hourDiff < d*24)
                                break;
                            end
                            % If available (and not NaN), store E and
                            % measurement in another array
                            if (hourDiff == d*24)
                                if (isnan(values(r)))
                                    break;
                                end
                                n=n+1;
                                E_tmp(n) = E(q);
                                prev_values_tmp(n) = values(r);
                                break;
                            end
                        end
                    end
                    if (~isempty(E_tmp))
                        fig = figure('Visible','off');
                        plot(prev_values_tmp,E_tmp,'.');
                        title([char(colNames{k}),' ',num2str(d)]);
                        print(fig,'-dpng',plotFileName);            
                        close(fig);
                    end
                end
            end
        end    
        close all
    end
end
