colNames = {'year',...
            'month',...
            'day',...
            'elevation',...
            'P',...
            'Te',...
            'E',...
            'd1P1h',...
            'd1P3h',...
            'd1P6h',...
            'd1P9h',...
            'd1P12h',...
            'd1P24h',...
            'd1Te1h',...
            'd1Te3h',...
            'd1Te6h',...
            'd1Te9h',...
            'd1Te12h',...
            'd1Te24h',...
            'd2P1h',...
            'd2P3h',...
            'd2P6h',...
            'd2P9h',...
            'd2P12h',...
            'd2P24h',...
            'd2Te1h',...
            'd2Te3h',...
            'd2Te6h',...
            'd2Te9h',...
            'd2Te12h',...
            'd2Te24h',...
            'd3P1h',...
            'd3P3h',...
            'd3P6h',...
            'd3P9h',...
            'd3P12h',...
            'd3P24h',...
            'd3Te1h',...
            'd3Te3h',...
            'd3Te6h',...
            'd3Te9h',...
            'd3Te12h',...
            'd3Te24h',...
            'd4P1h',...
            'd4P3h',...
            'd4P6h',...
            'd4P9h',...
            'd4P12h',...
            'd4P24h',...
            'd4Te1h',...
            'd4Te3h',...
            'd4Te6h',...
            'd4Te9h',...
            'd4Te12h',...
            'd4Te24h'};

ISDStatisticsRootDir = 'D:\NOAA\ISD_stat';
ISDCorrelationsRootDir = 'D:\NOAA\ISD_stat_corr';
ISDStatisticsPlotDestDir = 'D:\NOAA\ISD_stat_corr';
stationDirs = dir(ISDStatisticsRootDir);
for i=1:size(stationDirs,1)
    if (strcmp(stationDirs(i).name,'.') || strcmp(stationDirs(i).name,'..'))  % Skip '.' and '..'
        continue;
    end         
    
    hourFiles = dir(fullfile(ISDStatisticsRootDir,stationDirs(i).name));
    for j=1:size(hourFiles,1)
        if (strcmp(hourFiles(j).name,'.')...
            || strcmp(hourFiles(j).name,'..')...
            || isdir(hourFiles(j).name))  % Skip '.', '..' and folders
            continue;
        end      
        
        %% Format string for each line of text:
        % For more information, see the TEXTSCAN documentation.
        formatSpec = '%f%f%f%f%f%*s%*s%*s%f%*s%*s%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';        
        %% Open the text file.
        fileID = fopen(fullfile(ISDStatisticsRootDir,stationDirs(i).name,hourFiles(j).name),'r');

        %% Read columns of data according to format string.
        % This call is based on the structure of the file used to generate this
        % code. If an error occurs for a different file, try regenerating the code
        % from the Import Tool.
        dataArray = textscan(fileID, formatSpec, 'Delimiter', ',', 'EmptyValue', NaN, 'ReturnOnError', false);
        dataArray = dataArray(1:end-1); % delete the last, empty column

        %% Close the text file.
        fclose(fileID);

        %% Allocate imported array to column variable names
        year = dataArray{:, 1};
        month = dataArray{:, 2};
        day = dataArray{:, 3};
        E = dataArray{:, 7};             
        fileNameParts = strsplit(hourFiles(j).name,'.');
        hour = fileNameParts{1};            
        
        %% Create output directory
        mkdir(fullfile(ISDStatisticsPlotDestDir,stationDirs(i).name,hour));
        %% Calculate correlation coefficients    
        for k=1:size(dataArray,2)            
            % Skip year, month, day, elevation and E
            if (k==1 || k==2 || k==3 || k==4 || k==7)
                continue;
            end
            [stationDirs(i).name ' ' hourFiles(j).name ' ' num2str(k)]
            
            values = dataArray{:,k};
            if (~isempty(values(~isnan(values))))
                % same-day correlation coefficient
                if (~exist(fullfile(ISDStatisticsPlotDestDir,stationDirs(i).name,hour,[char(colNames{:, k}),'_0.png']),'file'))
                    fig = figure('Visible','off');
                    plot(dataArray{:, k},E,'.');
                    title([char(colNames{k}),' 0']);
                    print(fig,'-dpng',fullfile(ISDStatisticsPlotDestDir,stationDirs(i).name,hour,[char(colNames{:, k}),'_0.png']));            
                    close(fig);
                end
                % previous-days correlation coefficients
                for d=-1:-1:-5                   
                    if (exist(fullfile(ISDStatisticsPlotDestDir,stationDirs(i).name,hour,[char(colNames{:, k}),'_',num2str(d),'.png']),'file'))
                        continue;
                    end
                    prev_values_tmp = [];
                    E_tmp = [];                    
                    n=0;
                    for q=(1-d):size(E)
                        % check if previous day measurement is available                        
                        minute = '00';  % Its value is always 00
                        dtNow = datetime(strcat(num2str(year(q)),...
                                                num2str(month(q),'%02d'),...
                                                num2str(day(q),'%02d'),...
                                                num2str(str2double(hour),'%02d'),...
                                                minute),...
                                         'InputFormat', 'yyyyMMddHHmm');
                        for r=q-1:-1:1
                            dtPrev = datetime(strcat(num2str(year(r)),...
                                                     num2str(month(r),'%02d'),...
                                                     num2str(day(r),'%02d'),...
                                                     num2str(str2double(hour),'%02d'),...
                                                     minute),...
                                              'InputFormat', 'yyyyMMddHHmm');                                          
                            hourDiff = hours(dtPrev - dtNow);                  
                            if (hourDiff < d*24)
                                break;
                            end
                            % If available (and not NaN), store E and
                            % measurement in another array
                            if (hourDiff == d*24)
                                if (isnan(values(r)))
                                    break;
                                end
                                n=n+1;
                                E_tmp(n) = E(q);
                                prev_values_tmp(n) = values(r);
                                break;
                            end
                        end
                    end
                    if (~isempty(E_tmp))
%                         plot(prev_values_tmp,E_tmp,'.');
%                         title([char(colNames{k}),' ',num2str(d)]);
                        fig = figure('Visible','off');
                        plot(prev_values_tmp,E_tmp,'.');
                        title([char(colNames{k}),' ',num2str(d)]);
                        print(fig,'-dpng',fullfile(ISDStatisticsPlotDestDir,stationDirs(i).name,hour,[char(colNames{:, k}),'_',num2str(d),'.png']));            
                        close(fig);
                    end
                end
            end
        end    
        close all
    end
end
